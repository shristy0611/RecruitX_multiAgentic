from sqlalchemy import Column, Integer, String, Float, DateTime, ForeignKey, JSON, Text
from sqlalchemy.sql import func
from sqlalchemy.orm import relationship
from recruitx_app.core.database import Base

class Score(Base):
    __tablename__ = "scores"
    
    id = Column(Integer, primary_key=True, index=True)
    job_id = Column(Integer, ForeignKey("jobs.id"), nullable=False)
    candidate_id = Column(Integer, ForeignKey("candidates.id"), nullable=False)
    
    # Overall match score between 0-100
    overall_score = Column(Float, nullable=False)
    
    # Score details and explanations
    details = Column(JSON, nullable=True)  # Will contain breakdown of scores by categories
    explanation = Column(Text, nullable=True)  # Explanation of the scoring, generated by the Scoring Agent
    
    created_at = Column(DateTime(timezone=True), server_default=func.now())
    updated_at = Column(DateTime(timezone=True), onupdate=func.now())
    
    # Relationships
    job = relationship("Job", backref="scores")
    candidate = relationship("Candidate", backref="scores")
    
    def __repr__(self):
        return f"<Score {self.id}: Job {self.job_id} - Candidate {self.candidate_id} = {self.overall_score}>" 